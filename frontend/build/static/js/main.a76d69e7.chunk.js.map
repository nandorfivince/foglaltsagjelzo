{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ENDPOINT","App","buttonState","setButtonState","useState","useEffect","socket","socketIOClient","on","state","disconnect","React","createElement","style","textAlign","marginTop","backgroundColor","minHeight","color","onClick","handleClick","newState","emit","padding","fontSize","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yOAKA,MAAMA,EAAW,wBAiCFC,MA/Bf,WACE,MAAOC,EAAaC,GAAkBC,mBAAS,UAkB/C,OAhBAC,oBAAU,KACR,MAAMC,EAASC,YAAeP,GAM9B,OAJAM,EAAOE,GAAG,cAAgBC,IACxBN,EAAeM,KAGV,IAAMH,EAAOI,cACnB,IASDC,IAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,UAAW,MAAOC,gBAAiB,QAASC,UAAW,QAASC,MAAO,UACxGP,IAAAC,cAAA,UACEO,QATcC,KAClB,MAAMC,EAA2B,WAAhBnB,EAA2B,UAAY,SACxDC,EAAekB,GACfd,YAAeP,GAAUsB,KAAK,cAAeD,IAOzCR,MAAO,CAAEU,QAAS,YAAaC,SAAU,OAAQN,MAAO,QAASF,gBAAiC,WAAhBd,EAA2B,QAAU,QAEtHA,KCpBMuB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/B,IAAAC,cAACD,IAAMgC,WAAU,KACfhC,IAAAC,cAACX,EAAG,QAORwB","file":"static/js/main.a76d69e7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css'; // vagy a megfelelő fájlnév, ha más\n\n\nconst ENDPOINT = \"http://localhost:3000\"; // Címe a backend szervernek\n\nfunction App() {\n  const [buttonState, setButtonState] = useState('Szabad');\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n\n    socket.on('stateChange', (state) => {\n      setButtonState(state);\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n  const handleClick = () => {\n    const newState = buttonState === 'Szabad' ? 'Foglalt' : 'Szabad';\n    setButtonState(newState);\n    socketIOClient(ENDPOINT).emit('changeState', newState);\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '20%', backgroundColor: 'black', minHeight: '100vh', color: 'white' }}>\n      <button\n        onClick={handleClick}\n        style={{ padding: '10px 20px', fontSize: '20px', color: 'white', backgroundColor: buttonState === 'Szabad' ? 'green' : 'red' }}\n      >\n        {buttonState}\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}